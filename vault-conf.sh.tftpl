#!/bin/bash


TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 3600"`
PUBLIC_HOSTNAME=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-hostname`
PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4`
LOCAL_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
CLUSTER_NAME=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/tags/instance/Name`

# Update and install necessary packags
sudo yum -y update
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo

# Install Vault
sudo yum install -y vault
sudo yum -y install jq
sudo export VAULT_ADDR=https://127.0.0.1:8200
echo "export VAULT_ADDR=https://127.0.0.1:8200" | sudo tee -a /etc/environment
echo "export VAULT_API_ADDR=http://0.0.0.0:8200" | sudo tee -a /etc/environment
source /etc/environment



#Import CA certificates and pass Certicate gen script
echo ${cert_gen_script} | base64 --decode > /tmp/cert-gen.sh
echo ${ca_cert} | base64 --decode > /tmp/vault-ca.pem
echo ${ca_key} | base64 --decode > /tmp/vault-ca.key
echo ${vault_license} > /opt/vault/vault.hclic

# Generate certificates
cd /tmp/
chmod +x /tmp/cert-gen.sh
./cert-gen.sh $LOCAL_IP $PUBLIC_IP
cp /tmp/vault-cert.pem /opt/vault/tls/vault-cert.pem
cp /tmp/vault-key.pem /opt/vault/tls/vault-key.pem
cp /tmp/vault-ca.pem /opt/vault/tls/vault-ca.pem
cp /opt/vault/tls/vault-ca.pem /etc/pki/ca-trust/source/anchors/vault-ca.pem
cp /tmp/vault-ca.pem /usr/local/share/ca-certificates/vault-ca.crt
sudo update-ca-trust

# Create Vault configuration
sudo mkdir -p /etc/vault.d
cat << EOT | sudo tee /etc/vault.d/vault.hcl
cluster_addr  = "https://$LOCAL_IP:8201"
api_addr      = "https://$PUBLIC_IP:8200"
disable_mlock = true

listener "tcp" {
    address            = "0.0.0.0:8200"
    tls_cert_file      = "/opt/vault/tls/vault-cert.pem"
    tls_key_file       = "/opt/vault/tls/vault-key.pem"
    tls_client_ca_file = "/opt/vault/tls/vault-ca.pem"
}

# Auto unseal using aws kms
seal "awskms" {
  region     = "eu-west-1"
  kms_key_id = "${kms_key}"
}

storage "raft" {
  path    = "/opt/vault/data"
  node_id = "node${count}"

        retry_join {
            leader_api_addr         = "https://10.0.1.100:8200"
            leader_ca_cert_file     = "/opt/vault/tls/vault-ca.pem"
        }

        retry_join {
            leader_api_addr         = "https://10.0.2.100:8200"
            leader_ca_cert_file     = "/opt/vault/tls/vault-ca.pem"

        }

        retry_join {
            leader_api_addr         = "https://10.0.3.100:8200"
            leader_ca_cert_file     = "/opt/vault/tls/vault-ca.pem"

        }
}
ui="true"

# Enterprise license_path
license_path = "/opt/vault/vault.hclic"
EOT

mkdir -p /opt/vault/data
chown vault:vault /opt/vault/data
sudo systemctl enable vault
sudo systemctl start vault

sudo mkdir -p /opt/vault/data
sudo vault server -config=/etc/vault.d/vault.hcl
sudo vault operator init -recovery-shares=3 -recovery-threshold=2 -format=json | tee /home/ec2-user/initialization.json

# Set file ownership and permissions
chown --recursive vault:vault /opt/vault
chown --recursive vault:vault /etc/vault.d
chmod 640 /etc/vault.d/vault.hcl
chown root:vault /opt/vault/vault.hclic
chmod 0640 /opt/vault/vault.hclic
chown --recursive vault:vault /opt/vault
chown --recursive vault:vault /etc/vault.d
chown root:root /opt/vault/tls/*.pem
chown root:vault /opt/vault/tls/vault-key.pem
chmod 0640 /opt/vault/tls/vault-key.pem
chmod 0644 /opt/vault/tls/vault-cert.pem /opt/vault/tls/vault-ca.pem
chmod 0644 /etc/pki/ca-trust/source/anchors/vault-ca.pem /etc/pki/ca-trust/source/anchors/vault-ca.pem
